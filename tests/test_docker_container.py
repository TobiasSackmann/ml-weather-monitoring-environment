from unittest.mock import patch, mock_open
from unittest import TestCase
import unittest
import sys
import pandas as pd
import sys
import pickle


class TestDockerContainer(TestCase):

    @patch("pandas.concat")
    @patch("pickle.load")
    @patch("requests.post")
    @patch("influxdb_client.InfluxDBClient.write_api")
    @patch("influxdb_client.InfluxDBClient.query_api")
    def test_docker_container(self, mock_query, mock_write, mock_post, mock_load, mock_concat): 
        # Arrange
        mock_query.return_value.query_data_frame.return_value = pd.DataFrame()
        mock_write.return_value.write.return_value = None
        mock_post_value = mock_post.return_value
        mock_post_value.text = '{"predictions": [[1,0],[1,0]]}'
        mock_concat.return_value = pd.read_json("./tests/resources/docker_dataframe.json")

        def open_side_effect(file, *args, **kwargs):
            if file == 'selected_columns.pkl':  # Nur spezifische Datei abfangen
                mock_data = ['10838_days_0_icon', '10838_days_0_moonPhase', '10838_days_0_moonrise', '10838_days_0_moonset', '10838_days_0_precipitation', '10838_days_0_sunrise', '10838_days_0_sunset', '10838_days_0_sunshine', '10838_days_0_temperatureMax', '10838_days_0_temperatureMin', '10838_days_0_windDirection', '10838_days_0_windGust', '10838_days_0_windSpeed', '10838_days_1_icon', '10838_days_1_moonPhase', '10838_days_1_moonrise', '10838_days_1_moonset', '10838_days_1_precipitation', '10838_days_1_sunrise', '10838_days_1_sunset', '10838_days_1_sunshine', '10838_days_1_temperatureMax', '10838_days_1_temperatureMin', '10838_days_1_windDirection', '10838_days_1_windGust', '10838_days_1_windSpeed', '10838_days_2_icon', '10838_days_2_moonPhase', '10838_days_2_moonrise', '10838_days_2_moonset', '10838_days_2_precipitation', '10838_days_2_sunrise', '10838_days_2_sunset', '10838_days_2_sunshine', '10838_days_2_temperatureMax', '10838_days_2_temperatureMin', '10838_days_2_windDirection', '10838_days_2_windGust', '10838_days_2_windSpeed', '10838_days_3_icon', '10838_days_3_moonPhase', '10838_days_3_moonrise', '10838_days_3_moonset', '10838_days_3_precipitation', '10838_days_3_sunrise', '10838_days_3_sunset', '10838_days_3_sunshine', '10838_days_3_temperatureMax', '10838_days_3_temperatureMin', '10838_days_3_windDirection', '10838_days_3_windGust', '10838_days_3_windSpeed', '10838_days_4_icon', '10838_days_4_moonPhase', '10838_days_4_moonrise', '10838_days_4_moonset', '10838_days_4_precipitation', '10838_days_4_sunrise', '10838_days_4_sunset', '10838_days_4_sunshine', '10838_days_4_temperatureMax', '10838_days_4_temperatureMin', '10838_days_4_windDirection', '10838_days_4_windGust', '10838_days_4_windSpeed', '10838_days_5_icon', '10838_days_5_moonPhase', '10838_days_5_moonrise', '10838_days_5_moonset', '10838_days_5_precipitation', '10838_days_5_sunrise', '10838_days_5_sunset', '10838_days_5_sunshine', '10838_days_5_temperatureMax', '10838_days_5_temperatureMin', '10838_days_5_windDirection', '10838_days_5_windGust', '10838_days_5_windSpeed', '10838_days_6_icon', '10838_days_6_moonPhase', '10838_days_6_moonrise', '10838_days_6_moonset', '10838_days_6_precipitation', '10838_days_6_sunrise', '10838_days_6_sunset', '10838_days_6_sunshine', '10838_days_6_temperatureMax', '10838_days_6_temperatureMin', '10838_days_6_windDirection', '10838_days_6_windGust', '10838_days_6_windSpeed', '10838_days_7_icon', '10838_days_7_moonPhase', '10838_days_7_moonrise', '10838_days_7_moonset', '10838_days_7_precipitation', '10838_days_7_sunrise', '10838_days_7_sunset', '10838_days_7_sunshine', '10838_days_7_temperatureMax', '10838_days_7_temperatureMin', '10838_days_7_windDirection', '10838_days_7_windGust', '10838_days_7_windSpeed', '10838_days_8_icon', '10838_days_8_moonPhase', '10838_days_8_moonrise', '10838_days_8_moonset', '10838_days_8_precipitation', '10838_days_8_sunrise', '10838_days_8_sunset', '10838_days_8_sunshine', '10838_days_8_temperatureMax', '10838_days_8_temperatureMin', '10838_days_8_windDirection', '10838_days_8_windGust', '10838_days_8_windSpeed', '10838_days_9_icon', '10838_days_9_moonPhase', '10838_days_9_moonrise', '10838_days_9_moonset', '10838_days_9_precipitation', '10838_days_9_sunrise', '10838_days_9_sunset', '10838_days_9_sunshine', '10838_days_9_temperatureMax', '10838_days_9_temperatureMin', '10838_days_9_windDirection', '10838_days_9_windGust', '10838_days_9_windSpeed', '10840_days_0_icon', '10840_days_0_moonPhase', '10840_days_0_moonrise', '10840_days_0_moonset', '10840_days_0_precipitation', '10840_days_0_sunrise', '10840_days_0_sunset', '10840_days_0_sunshine', '10840_days_0_temperatureMax', '10840_days_0_temperatureMin', '10840_days_0_windDirection', '10840_days_0_windGust', '10840_days_0_windSpeed', '10840_days_1_icon', '10840_days_1_moonPhase', '10840_days_1_moonrise', '10840_days_1_moonset', '10840_days_1_precipitation', '10840_days_1_sunrise', '10840_days_1_sunset', '10840_days_1_sunshine', '10840_days_1_temperatureMax', '10840_days_1_temperatureMin', '10840_days_1_windDirection', '10840_days_1_windGust', '10840_days_1_windSpeed', '10840_days_2_icon', '10840_days_2_moonPhase', '10840_days_2_moonrise', '10840_days_2_moonset', '10840_days_2_precipitation', '10840_days_2_sunrise', '10840_days_2_sunset', '10840_days_2_sunshine', '10840_days_2_temperatureMax', '10840_days_2_temperatureMin', '10840_days_2_windDirection', '10840_days_2_windGust', '10840_days_2_windSpeed', '10840_days_3_icon', '10840_days_3_moonPhase', '10840_days_3_moonrise', '10840_days_3_moonset', '10840_days_3_precipitation', '10840_days_3_sunrise', '10840_days_3_sunset', '10840_days_3_sunshine', '10840_days_3_temperatureMax', '10840_days_3_temperatureMin', '10840_days_3_windDirection', '10840_days_3_windGust', '10840_days_3_windSpeed', '10840_days_4_icon', '10840_days_4_moonPhase', '10840_days_4_moonrise', '10840_days_4_moonset', '10840_days_4_precipitation', '10840_days_4_sunrise', '10840_days_4_sunset', '10840_days_4_sunshine', '10840_days_4_temperatureMax', '10840_days_4_temperatureMin', '10840_days_4_windDirection', '10840_days_4_windGust', '10840_days_4_windSpeed', '10840_days_5_icon', '10840_days_5_moonPhase', '10840_days_5_moonrise', '10840_days_5_moonset', '10840_days_5_precipitation', '10840_days_5_sunrise', '10840_days_5_sunset', '10840_days_5_sunshine', '10840_days_5_temperatureMax', '10840_days_5_temperatureMin', '10840_days_5_windDirection', '10840_days_5_windGust', '10840_days_5_windSpeed', '10840_days_6_icon', '10840_days_6_moonPhase', '10840_days_6_moonrise', '10840_days_6_moonset', '10840_days_6_precipitation', '10840_days_6_sunrise', '10840_days_6_sunset', '10840_days_6_sunshine', '10840_days_6_temperatureMax', '10840_days_6_temperatureMin', '10840_days_6_windDirection', '10840_days_6_windGust', '10840_days_6_windSpeed', '10840_days_7_icon', '10840_days_7_moonPhase', '10840_days_7_moonrise', '10840_days_7_moonset', '10840_days_7_precipitation', '10840_days_7_sunrise', '10840_days_7_sunset', '10840_days_7_sunshine', '10840_days_7_temperatureMax', '10840_days_7_temperatureMin', '10840_days_7_windDirection', '10840_days_7_windGust', '10840_days_7_windSpeed', '10840_days_8_icon', '10840_days_8_moonPhase', '10840_days_8_moonrise', '10840_days_8_moonset', '10840_days_8_precipitation', '10840_days_8_sunrise', '10840_days_8_sunset', '10840_days_8_sunshine', '10840_days_8_temperatureMax', '10840_days_8_temperatureMin', '10840_days_8_windDirection', '10840_days_8_windGust', '10840_days_8_windSpeed', '10840_days_9_icon', '10840_days_9_moonPhase', '10840_days_9_moonrise', '10840_days_9_moonset', '10840_days_9_precipitation', '10840_days_9_sunrise', '10840_days_9_sunset', '10840_days_9_sunshine', '10840_days_9_temperatureMax', '10840_days_9_temperatureMin', '10840_days_9_windDirection', '10840_days_9_windGust', '10840_days_9_windSpeed', '10838_warnings_0_end', '10838_warnings_0_level', '10838_warnings_0_start', '10838_warnings_0_type', '10840_warnings_0_end', '10840_warnings_0_level', '10840_warnings_0_start', '10840_warnings_0_type', '10838_warnings_1_end', '10838_warnings_1_level', '10838_warnings_1_start', '10838_warnings_1_type', '10840_warnings_1_end', '10840_warnings_1_level', '10840_warnings_1_start', '10840_warnings_1_type', '10838_warnings_0_altitudeEnd', '10840_warnings_0_altitudeEnd']
                mocked_file = mock_open(read_data=pickle.dumps(mock_data)).return_value
                mocked_file.__enter__.return_value.read.return_value = pickle.dumps(mock_data)
                return mocked_file
            else:
                # Standardverhalten f√ºr alle anderen open-Aufrufe
                return original_open(file, *args, **kwargs)

        # Import the script to execute it with mocks
        sys.path.insert(1, "./notebooks")  # noqa: E402
        sys.path.insert(1, "./library")

        original_open = open
        with patch('builtins.open', side_effect=open_side_effect): # as mocked_open:
            import docker_container # type: ignore


if __name__ == "__main__":
    unittest.main()