---
- hosts: k3s_cluster
  tasks:
  # retries are required to ensure everything is ready after k3s installation.
  - name: install apt pre-requisites
    become: yes
    apt:
      name:
        - python3-pip
        - snap
      update_cache: yes
    retries: 10
    delay: 30
  - name: install pip pre-requisites
    pip:
      name:
        - openshift
        - pyyaml
        - kubernetes
  - name: install helm
    become: yes
    snap:
      name:
        - helm
      classic: true
  - name: install Helm Diff Plugin
    kubernetes.core.helm_plugin:
      plugin_path: https://github.com/databus23/helm-diff
      state: present
  - name: copy kubeconfig to home directory
    become: yes
    ansible.builtin.copy:
      src: /etc/rancher/k3s/k3s.yaml
      dest: /home/{{ ansible_user }}/.kube/config 
      remote_src: true
      owner: '{{ ansible_user }}'
      mode: '0700'
  - name: Create monitoring namespace
    kubernetes.core.k8s:
      name: monitoring
      api_version: v1
      kind: Namespace
      state: present
  - name: Add stable grafana chart repo
    kubernetes.core.helm_repository:
      name: grafana
      repo_url: "https://grafana.github.io/helm-charts"
  - name: Add stable influxdata chart repo
    kubernetes.core.helm_repository:
      name: influxdata
      repo_url: "https://helm.influxdata.com/"
  - name: Add bitnami chart repo
    kubernetes.core.helm_repository:
      name: bitnami
      repo_url: "https://charts.bitnami.com/bitnami"
  - name: Update Helm Repos
    command: helm repo update
  - name: Deploy latest version of Grafana chart inside monitoring namespace with values
    kubernetes.core.helm:
      name: grafana
      chart_ref: grafana/grafana
      release_namespace: monitoring
      values:
        replicas: 1
        ingress:
          enabled: true
          hosts:
            - tig.grafana.local
          path: /
  - name: Deploy and configure latest version of Influxdb2 chart
    kubernetes.core.helm:
      name: influxdb
      chart_ref: influxdata/influxdb2
      release_namespace: monitoring
      values:
        ingress:
          enabled: true
          hostname: tig.influxdb.local
          className: traefik
          path: /
        service:
          type: ClusterIP 
          nodePort: 30000
        adminUser:
          organization: "influxdata"
          bucket: "default"
          user: "admin"
          password: "password"
          token: "securetoken"
  - name: Deploy and configure latest version of Telegraf chart
    kubernetes.core.helm:
      name: telegraf
      chart_ref: influxdata/telegraf
      release_namespace: monitoring
      values:
        service:
          enabled: false
        config:
          inputs:
            - http:
                urls:
                  - "https://dwd.api.proxy.bund.dev/v30/stationOverviewExtended?stationIds=10838,10840"
                method: "GET"
                interval: "10s"
                response_timeout: "10s"
                data_format: "json"
          outputs:
            - influxdb_v2:
                urls:
                  - "http://influxdb-influxdb2.monitoring.svc.cluster.local:80"
                organization: "influxdata"
                bucket: "default"
                token: "securetoken"
  # Due to ressource limitations on the test environment persistence is partly disabled.
  - name: Install mlflow from bitnahmi helm chart
    kubernetes.core.helm:
      name: mlflow
      chart_ref: bitnami/mlflow
      release_namespace: machinelearning
      create_namespace: true
      values:
        minio:
          enabled: false
        postgresql:
          enabled: true
          auth:
            username: kjaEftBIal
            password: s5GHwTzKip
        tracking:
          service:
            ports:
              http: 30001 
          auth:
            username: user
            password: password
          ingress:
            enabled: true
- hosts: all
  become: true
  tasks:
    - name: Install docker related packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
    - name: Add GPG-Key hinzu
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
    - name: Update Packages List
      apt:
        update_cache: yes
    - name: Install Docker
      apt:
        name: docker-ce
        state: present
    - name: Ensure Docker service is running
      systemd:
        name: docker
        enabled: yes
        state: started
    - name: Ensure the Docker registry container is running
      community.docker.docker_container:
        name: registry
        image: registry:2
        state: started
        restart_policy: always
        published_ports:
          - "5000:5000"
    - name: Configure Docker to use insecure registry
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
        mode: '0644'
    - name: Restart Docker to apply changes
      systemd:
        name: docker
        state: restarted
        enabled: yes
